{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css"],"names":["module","exports","Header","useState","hide","setHide","className","style","container","container2","to","color","activeStyle","fontWeight","button","onClick","Message","props","alt","src","avatar","img","block","treug","name","message","time","messageData","HW1","Affair","affair","deleteButton","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","filter","filterButton","setFilter","defaultAffairs","priority","HW2","affairs","setAffairs","filteredAffairs","aff","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onEnter","inputClass","s","value","onKeyDown","onChange","onBlur","disabled","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","trimmedName","currentTarget","key","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","PreJunior","Error404","Junior","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.80d824d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Header_button__1rLrO\",\"container\":\"Header_container__2Xtw9\",\"container2\":\"Header_container2__1fSWU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1ZAmP\",\"errorInput\":\"SuperInputText_errorInput__1dmF3\",\"error\":\"SuperInputText_error__2eymP\",\"onError\":\"SuperInputText_onError__3q44l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__cxE7B\",\"column\":\"HW4_column__3o_pi\",\"testSpanError\":\"HW4_testSpanError__g-ivP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__l48WH\",\"red\":\"SuperButton_red__n6a8N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2oIOe\",\"spanClassName\":\"SuperCheckbox_spanClassName__2S-y0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__5M97c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Greeting_error__3nNoA\"};","import React, {useState} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport style from './Header.module.css'\r\n\r\nfunction Header() {\r\n    let [hide, setHide] = useState<boolean>(true)\r\n\r\n    function showMenu() {\r\n        setHide(!hide)\r\n    }\r\n\r\n    return (\r\n        <div className={hide ? style.container : style.container2}>\r\n            <NavLink to={'pre-junior'} style={{color: 'violet'}}\r\n                     activeStyle={{color: 'green', fontWeight: 'bold'}}><span>Junior</span></NavLink>\r\n            <NavLink to={'junior'} style={{color: 'cyan'}}\r\n                     activeStyle={{color: 'green', fontWeight: 'bold'}}><span>PreJunior</span></NavLink>\r\n            <NavLink to={'junior-plus'} style={{color: 'aquamarine'}}\r\n                     activeStyle={{color: 'green', fontWeight: 'bold'}}><span>JuniorPlus</span></NavLink>\r\n            <button className={style.button} onClick={showMenu}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport style from './Message.module.css'\r\n\r\ntype MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={style.container}>\r\n            <img alt={'#'} src={props.avatar} className={style.img}/>\r\n            <div className={style.block}>\r\n                <span className={style.treug}></span>\r\n            <p className={style.name}>{props.name}</p>\r\n            <span className={style.message}>{props.message}</span>\r\n            <span className={style.time}>{props.time}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Artem',\r\n    message: 'npm start нажимал?',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport style from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}\r\n\r\n    return (\r\n        <div>\r\n           {props.affair.name}\r\n            <button className={style.deleteButton} onClick={deleteCallback}>x</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React, {Dispatch, SetStateAction} from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport style from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: Dispatch<SetStateAction<FilterType>>\r\n    deleteAffairCallback: (_id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')}\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button className={props.filter === 'all'? style.filterButton : '' } onClick={setAll}>All</button>\r\n            <button className={props.filter === 'high'? style.filterButton : '' } onClick={setHigh}>High</button>\r\n            <button className={props.filter === 'middle'? style.filterButton : '' } onClick={setMiddle}>Middle</button>\r\n            <button className={props.filter === 'low'? style.filterButton : '' } onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: FilterType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    if (filter === 'all') return affairs\r\n     // if(filter === 'high') return affairs.filter(aff=>aff.priority === 'high')// need to fix\r\n     // if(filter === 'middle') return affairs.filter(aff=>aff.priority === 'middle')\r\n     // else return affairs.filter(aff=>aff.priority === 'low')\r\n    else return affairs.filter(aff=>aff.priority === filter)\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number):  Array<AffairType> => { //\r\n    return  affairs.filter(aff=>aff._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <Affairs\r\n                filter={filter}\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEventHandler, KeyboardEventHandler} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: ChangeEventHandler<HTMLInputElement> // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    onEnter: KeyboardEventHandler<HTMLInputElement>\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onEnter} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : ''\r\n\r\n    return (\r\n        <div>\r\n            <input value={name}\r\n                   onKeyDown={onEnter}\r\n                   onChange={setNameCallback}\r\n                   className={inputClass}\r\n                   onBlur={setNameCallback}\r\n            />\r\n\r\n            <button onClick={addUser} disabled={!name}>add</button>\r\n            <span>{totalUsers}</span>\r\n            <div>{error}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        let trimmedName = e.currentTarget.value\r\n        if(trimmedName) {\r\n            setName(trimmedName)\r\n            error && setError('')\r\n        } else {\r\n            name && setName('')\r\n            setError('enter correct value')\r\n        }\r\n        // need to fix\r\n    }\r\n    const addUser = () => {\r\n        addUserCallback(name)\r\n        alert(`Hello ${name}`)\r\n        setName('')\r\n            // need to fix\r\n\r\n    }\r\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if(e.key === 'Enter' && name){\r\n            addUser()\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onEnter={onEnter}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        let user = {_id: v1(), name}\r\n        setUsers([ ...users, user]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${className} ${error ? s.errorInput : s.superInput} ` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            <span className={finalSpanClassName}>{error}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n           \r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоnтает ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            Junior\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior\r\n","import React from 'react'\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            JuniorPlus\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus\r\n","import React from 'react'\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus'\r\n}\r\n\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n                // add routes\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            {/*<div>react homeworks:</div>*/}\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__11Woy\",\"img\":\"Message_img__2fUEc\",\"block\":\"Message_block__162Mn\",\"name\":\"Message_name__3rLVk\",\"message\":\"Message_message__142oR\",\"time\":\"Message_time__2MeD_\",\"treug\":\"Message_treug__nIlDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__1SYEi\",\"filterButton\":\"Affairs_filterButton__3govx\",\"deleteButton\":\"Affairs_deleteButton__3NtEf\"};"],"sourceRoot":""}